// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: proto/p2p/v2/message.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// NOTE: replace verse discovory to this common topic in the future.
// Msg body for the common topic.
type MsgCommonTopic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Body:
	//
	//	*MsgCommonTopic_Misc
	//	*MsgCommonTopic_ReqSubmitterTopicSub
	Body isMsgCommonTopic_Body `protobuf_oneof:"body"`
}

func (x *MsgCommonTopic) Reset() {
	*x = MsgCommonTopic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_v2_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCommonTopic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCommonTopic) ProtoMessage() {}

func (x *MsgCommonTopic) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_v2_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCommonTopic.ProtoReflect.Descriptor instead.
func (*MsgCommonTopic) Descriptor() ([]byte, []int) {
	return file_proto_p2p_v2_message_proto_rawDescGZIP(), []int{0}
}

func (m *MsgCommonTopic) GetBody() isMsgCommonTopic_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *MsgCommonTopic) GetMisc() []byte {
	if x, ok := x.GetBody().(*MsgCommonTopic_Misc); ok {
		return x.Misc
	}
	return nil
}

func (x *MsgCommonTopic) GetReqSubmitterTopicSub() *ReqSubmitterTopicSub {
	if x, ok := x.GetBody().(*MsgCommonTopic_ReqSubmitterTopicSub); ok {
		return x.ReqSubmitterTopicSub
	}
	return nil
}

type isMsgCommonTopic_Body interface {
	isMsgCommonTopic_Body()
}

type MsgCommonTopic_Misc struct {
	Misc []byte `protobuf:"bytes,1,opt,name=misc,proto3,oneof"`
}

type MsgCommonTopic_ReqSubmitterTopicSub struct {
	ReqSubmitterTopicSub *ReqSubmitterTopicSub `protobuf:"bytes,2,opt,name=req_submitter_topic_sub,json=reqSubmitterTopicSub,proto3,oneof"`
}

func (*MsgCommonTopic_Misc) isMsgCommonTopic_Body() {}

func (*MsgCommonTopic_ReqSubmitterTopicSub) isMsgCommonTopic_Body() {}

type ReqSubmitterTopicSub struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId  uint64 `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Rpc      string `protobuf:"bytes,2,opt,name=rpc,proto3" json:"rpc,omitempty"`
	Contract []byte `protobuf:"bytes,3,opt,name=contract,proto3" json:"contract,omitempty"`
	IsLegacy bool   `protobuf:"varint,4,opt,name=isLegacy,proto3" json:"isLegacy,omitempty"`
}

func (x *ReqSubmitterTopicSub) Reset() {
	*x = ReqSubmitterTopicSub{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_v2_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSubmitterTopicSub) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSubmitterTopicSub) ProtoMessage() {}

func (x *ReqSubmitterTopicSub) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_v2_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSubmitterTopicSub.ProtoReflect.Descriptor instead.
func (*ReqSubmitterTopicSub) Descriptor() ([]byte, []int) {
	return file_proto_p2p_v2_message_proto_rawDescGZIP(), []int{1}
}

func (x *ReqSubmitterTopicSub) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *ReqSubmitterTopicSub) GetRpc() string {
	if x != nil {
		return x.Rpc
	}
	return ""
}

func (x *ReqSubmitterTopicSub) GetContract() []byte {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *ReqSubmitterTopicSub) GetIsLegacy() bool {
	if x != nil {
		return x.IsLegacy
	}
	return false
}

// Msg body for the Submitter topic.
type MsgSubmitterTopic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Body:
	//
	//	*MsgSubmitterTopic_Misc
	//	*MsgSubmitterTopic_ReqOptimismSignature
	//	*MsgSubmitterTopic_PubOptimismSignature
	Body isMsgSubmitterTopic_Body `protobuf_oneof:"body"`
}

func (x *MsgSubmitterTopic) Reset() {
	*x = MsgSubmitterTopic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_v2_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSubmitterTopic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSubmitterTopic) ProtoMessage() {}

func (x *MsgSubmitterTopic) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_v2_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgSubmitterTopic.ProtoReflect.Descriptor instead.
func (*MsgSubmitterTopic) Descriptor() ([]byte, []int) {
	return file_proto_p2p_v2_message_proto_rawDescGZIP(), []int{2}
}

func (m *MsgSubmitterTopic) GetBody() isMsgSubmitterTopic_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *MsgSubmitterTopic) GetMisc() []byte {
	if x, ok := x.GetBody().(*MsgSubmitterTopic_Misc); ok {
		return x.Misc
	}
	return nil
}

func (x *MsgSubmitterTopic) GetReqOptimismSignature() *ReqOptimismSignature {
	if x, ok := x.GetBody().(*MsgSubmitterTopic_ReqOptimismSignature); ok {
		return x.ReqOptimismSignature
	}
	return nil
}

func (x *MsgSubmitterTopic) GetPubOptimismSignature() *PubOptimismSignature {
	if x, ok := x.GetBody().(*MsgSubmitterTopic_PubOptimismSignature); ok {
		return x.PubOptimismSignature
	}
	return nil
}

type isMsgSubmitterTopic_Body interface {
	isMsgSubmitterTopic_Body()
}

type MsgSubmitterTopic_Misc struct {
	Misc []byte `protobuf:"bytes,1,opt,name=misc,proto3,oneof"`
}

type MsgSubmitterTopic_ReqOptimismSignature struct {
	ReqOptimismSignature *ReqOptimismSignature `protobuf:"bytes,2,opt,name=req_optimism_signature,json=reqOptimismSignature,proto3,oneof"`
}

type MsgSubmitterTopic_PubOptimismSignature struct {
	PubOptimismSignature *PubOptimismSignature `protobuf:"bytes,3,opt,name=pub_optimism_signature,json=pubOptimismSignature,proto3,oneof"`
}

func (*MsgSubmitterTopic_Misc) isMsgSubmitterTopic_Body() {}

func (*MsgSubmitterTopic_ReqOptimismSignature) isMsgSubmitterTopic_Body() {}

func (*MsgSubmitterTopic_PubOptimismSignature) isMsgSubmitterTopic_Body() {}

type ReqOptimismSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RollupIndex          uint64 `protobuf:"varint,1,opt,name=rollup_index,json=rollupIndex,proto3" json:"rollup_index,omitempty"`
	HighestVerifiedIndex uint64 `protobuf:"varint,2,opt,name=highest_verified_index,json=highestVerifiedIndex,proto3" json:"highest_verified_index,omitempty"`
	Contract             []byte `protobuf:"bytes,3,opt,name=contract,proto3" json:"contract,omitempty"`
	IsLegacy             bool   `protobuf:"varint,4,opt,name=isLegacy,proto3" json:"isLegacy,omitempty"`
}

func (x *ReqOptimismSignature) Reset() {
	*x = ReqOptimismSignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_v2_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqOptimismSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqOptimismSignature) ProtoMessage() {}

func (x *ReqOptimismSignature) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_v2_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqOptimismSignature.ProtoReflect.Descriptor instead.
func (*ReqOptimismSignature) Descriptor() ([]byte, []int) {
	return file_proto_p2p_v2_message_proto_rawDescGZIP(), []int{3}
}

func (x *ReqOptimismSignature) GetRollupIndex() uint64 {
	if x != nil {
		return x.RollupIndex
	}
	return 0
}

func (x *ReqOptimismSignature) GetHighestVerifiedIndex() uint64 {
	if x != nil {
		return x.HighestVerifiedIndex
	}
	return 0
}

func (x *ReqOptimismSignature) GetContract() []byte {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *ReqOptimismSignature) GetIsLegacy() bool {
	if x != nil {
		return x.IsLegacy
	}
	return false
}

type PubOptimismSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Publishes a list of signatures the sender has.
	Signatures []*OptimismSignature `protobuf:"bytes,1,rep,name=signatures,proto3" json:"signatures,omitempty"`
}

func (x *PubOptimismSignature) Reset() {
	*x = PubOptimismSignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_v2_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PubOptimismSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubOptimismSignature) ProtoMessage() {}

func (x *PubOptimismSignature) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_v2_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubOptimismSignature.ProtoReflect.Descriptor instead.
func (*PubOptimismSignature) Descriptor() ([]byte, []int) {
	return file_proto_p2p_v2_message_proto_rawDescGZIP(), []int{4}
}

func (x *PubOptimismSignature) GetSignatures() []*OptimismSignature {
	if x != nil {
		return x.Signatures
	}
	return nil
}

// Copied from v1/message.proto
type OptimismSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PreviousId  string `protobuf:"bytes,2,opt,name=previous_id,json=previousId,proto3" json:"previous_id,omitempty"`
	Signer      []byte `protobuf:"bytes,3,opt,name=signer,proto3" json:"signer,omitempty"`
	Contract    []byte `protobuf:"bytes,4,opt,name=contract,proto3" json:"contract,omitempty"`
	RollupIndex uint64 `protobuf:"varint,5,opt,name=rollup_index,json=rollupIndex,proto3" json:"rollup_index,omitempty"`
	RollupHash  []byte `protobuf:"bytes,6,opt,name=rollup_hash,json=rollupHash,proto3" json:"rollup_hash,omitempty"`
	Approved    bool   `protobuf:"varint,10,opt,name=approved,proto3" json:"approved,omitempty"`
	Signature   []byte `protobuf:"bytes,11,opt,name=signature,proto3" json:"signature,omitempty"`
	// These are fields that do not exist in OPStack and will be removed.
	//
	// Deprecated: Marked as deprecated in proto/p2p/v2/message.proto.
	BatchSize uint64 `protobuf:"varint,7,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	// Deprecated: Marked as deprecated in proto/p2p/v2/message.proto.
	PrevTotalElements uint64 `protobuf:"varint,8,opt,name=prev_total_elements,json=prevTotalElements,proto3" json:"prev_total_elements,omitempty"`
	// Deprecated: Marked as deprecated in proto/p2p/v2/message.proto.
	ExtraData []byte `protobuf:"bytes,9,opt,name=extra_data,json=extraData,proto3" json:"extra_data,omitempty"`
}

func (x *OptimismSignature) Reset() {
	*x = OptimismSignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_v2_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptimismSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptimismSignature) ProtoMessage() {}

func (x *OptimismSignature) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_v2_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptimismSignature.ProtoReflect.Descriptor instead.
func (*OptimismSignature) Descriptor() ([]byte, []int) {
	return file_proto_p2p_v2_message_proto_rawDescGZIP(), []int{5}
}

func (x *OptimismSignature) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OptimismSignature) GetPreviousId() string {
	if x != nil {
		return x.PreviousId
	}
	return ""
}

func (x *OptimismSignature) GetSigner() []byte {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *OptimismSignature) GetContract() []byte {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *OptimismSignature) GetRollupIndex() uint64 {
	if x != nil {
		return x.RollupIndex
	}
	return 0
}

func (x *OptimismSignature) GetRollupHash() []byte {
	if x != nil {
		return x.RollupHash
	}
	return nil
}

func (x *OptimismSignature) GetApproved() bool {
	if x != nil {
		return x.Approved
	}
	return false
}

func (x *OptimismSignature) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

// Deprecated: Marked as deprecated in proto/p2p/v2/message.proto.
func (x *OptimismSignature) GetBatchSize() uint64 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

// Deprecated: Marked as deprecated in proto/p2p/v2/message.proto.
func (x *OptimismSignature) GetPrevTotalElements() uint64 {
	if x != nil {
		return x.PrevTotalElements
	}
	return 0
}

// Deprecated: Marked as deprecated in proto/p2p/v2/message.proto.
func (x *OptimismSignature) GetExtraData() []byte {
	if x != nil {
		return x.ExtraData
	}
	return nil
}

var File_proto_p2p_v2_message_proto protoreflect.FileDescriptor

var file_proto_p2p_v2_message_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x32, 0x70, 0x2f, 0x76, 0x32, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x32, 0x22, 0x89, 0x01, 0x0a, 0x0e, 0x4d, 0x73, 0x67,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x04, 0x6d,
	0x69, 0x73, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x69, 0x73,
	0x63, 0x12, 0x59, 0x0a, 0x17, 0x72, 0x65, 0x71, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x73, 0x75, 0x62, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x65, 0x71, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x53, 0x75, 0x62, 0x48, 0x00, 0x52, 0x14, 0x72, 0x65, 0x71, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x75, 0x62, 0x42, 0x06, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x22, 0x7b, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x75, 0x62, 0x12, 0x19, 0x0a, 0x08,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x70, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x70, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4c, 0x65, 0x67, 0x61, 0x63,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x65, 0x67, 0x61, 0x63,
	0x79, 0x22, 0xe5, 0x01, 0x0a, 0x11, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x04, 0x6d, 0x69, 0x73, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x69, 0x73, 0x63, 0x12, 0x58, 0x0a,
	0x16, 0x72, 0x65, 0x71, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x73, 0x6d, 0x5f, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x71, 0x4f, 0x70,
	0x74, 0x69, 0x6d, 0x69, 0x73, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48,
	0x00, 0x52, 0x14, 0x72, 0x65, 0x71, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x73, 0x6d, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x58, 0x0a, 0x16, 0x70, 0x75, 0x62, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6d, 0x69, 0x73, 0x6d, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x75, 0x62, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x73, 0x6d,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x14, 0x70, 0x75, 0x62,
	0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x73, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xa7, 0x01, 0x0a, 0x14, 0x52, 0x65,
	0x71, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x73, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x6f, 0x6c, 0x6c, 0x75, 0x70,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x34, 0x0a, 0x16, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74,
	0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4c, 0x65, 0x67,
	0x61, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x65, 0x67,
	0x61, 0x63, 0x79, 0x22, 0x55, 0x0a, 0x14, 0x50, 0x75, 0x62, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69,
	0x73, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x70, 0x74,
	0x69, 0x6d, 0x69, 0x73, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0a,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0xf0, 0x02, 0x0a, 0x11, 0x4f,
	0x70, 0x74, 0x69, 0x6d, 0x69, 0x73, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x6f, 0x6c,
	0x6c, 0x75, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x6c, 0x6c,
	0x75, 0x70, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x72,
	0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x18, 0x01, 0x52, 0x09, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x32, 0x0a, 0x13, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x02, 0x18, 0x01, 0x52, 0x11, 0x70, 0x72, 0x65, 0x76, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0a, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x02,
	0x18, 0x01, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x42, 0x07, 0x5a,
	0x05, 0x2e, 0x2f, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_p2p_v2_message_proto_rawDescOnce sync.Once
	file_proto_p2p_v2_message_proto_rawDescData = file_proto_p2p_v2_message_proto_rawDesc
)

func file_proto_p2p_v2_message_proto_rawDescGZIP() []byte {
	file_proto_p2p_v2_message_proto_rawDescOnce.Do(func() {
		file_proto_p2p_v2_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_p2p_v2_message_proto_rawDescData)
	})
	return file_proto_p2p_v2_message_proto_rawDescData
}

var file_proto_p2p_v2_message_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_p2p_v2_message_proto_goTypes = []interface{}{
	(*MsgCommonTopic)(nil),       // 0: message.v2.MsgCommonTopic
	(*ReqSubmitterTopicSub)(nil), // 1: message.v2.ReqSubmitterTopicSub
	(*MsgSubmitterTopic)(nil),    // 2: message.v2.MsgSubmitterTopic
	(*ReqOptimismSignature)(nil), // 3: message.v2.ReqOptimismSignature
	(*PubOptimismSignature)(nil), // 4: message.v2.PubOptimismSignature
	(*OptimismSignature)(nil),    // 5: message.v2.OptimismSignature
}
var file_proto_p2p_v2_message_proto_depIdxs = []int32{
	1, // 0: message.v2.MsgCommonTopic.req_submitter_topic_sub:type_name -> message.v2.ReqSubmitterTopicSub
	3, // 1: message.v2.MsgSubmitterTopic.req_optimism_signature:type_name -> message.v2.ReqOptimismSignature
	4, // 2: message.v2.MsgSubmitterTopic.pub_optimism_signature:type_name -> message.v2.PubOptimismSignature
	5, // 3: message.v2.PubOptimismSignature.signatures:type_name -> message.v2.OptimismSignature
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_p2p_v2_message_proto_init() }
func file_proto_p2p_v2_message_proto_init() {
	if File_proto_p2p_v2_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_p2p_v2_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCommonTopic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_v2_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSubmitterTopicSub); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_v2_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSubmitterTopic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_v2_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqOptimismSignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_v2_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PubOptimismSignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_v2_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptimismSignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_p2p_v2_message_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*MsgCommonTopic_Misc)(nil),
		(*MsgCommonTopic_ReqSubmitterTopicSub)(nil),
	}
	file_proto_p2p_v2_message_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*MsgSubmitterTopic_Misc)(nil),
		(*MsgSubmitterTopic_ReqOptimismSignature)(nil),
		(*MsgSubmitterTopic_PubOptimismSignature)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_p2p_v2_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_p2p_v2_message_proto_goTypes,
		DependencyIndexes: file_proto_p2p_v2_message_proto_depIdxs,
		MessageInfos:      file_proto_p2p_v2_message_proto_msgTypes,
	}.Build()
	File_proto_p2p_v2_message_proto = out.File
	file_proto_p2p_v2_message_proto_rawDesc = nil
	file_proto_p2p_v2_message_proto_goTypes = nil
	file_proto_p2p_v2_message_proto_depIdxs = nil
}
